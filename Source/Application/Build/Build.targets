<Project>
	<Target Name="CopyFiles" AfterTargets="PrepareForBuild" DependsOnTargets="PopulateFilesToCopy">
		<Message
			Condition="%(CopyAlways) OR (!Exists('%(DestinationFile)') OR $([System.DateTime]::Parse('%(ModifiedTime)').Ticks) > $([System.IO.File]::GetLastWriteTime('%(DestinationFile)').Ticks))"
			Importance="high"
			Text="Target 'CopyFiles': Copying '%(FileToCopy.FullPath)' to '%(DestinationFile)'."
		/>
		<Copy
			Condition="%(CopyAlways) OR (!Exists('%(DestinationFile)') OR $([System.DateTime]::Parse('%(ModifiedTime)').Ticks) > $([System.IO.File]::GetLastWriteTime('%(DestinationFile)').Ticks))"
			DestinationFiles="%(DestinationFile)"
			SourceFiles="%(FileToCopy.FullPath)"
		/>
	</Target>
	<Target Name="EnsureConnectionsFile" BeforeTargets="PrepareForRun">
		<PropertyGroup>
			<_DestinationFile>Connections.config</_DestinationFile>
			<_SourceFile>Connections.Default.config</_SourceFile>
		</PropertyGroup>
		<Message
			Condition="!Exists('$(_DestinationFile)') AND Exists('$(_SourceFile)')"
			Importance="high"
			Text="Copying the file '$(_SourceFile)' to '$(_DestinationFile)'."
		/>
		<Warning
			Condition="!Exists('$(_SourceFile)')"
			Text="The file '$(_SourceFile)' does not exist."
		/>
		<Copy
			Condition="!Exists('$(_DestinationFile)') AND Exists('$(_SourceFile)')"
			DestinationFiles="$(_DestinationFile)"
			SourceFiles="$(_SourceFile)"
		/>
	</Target>
	<Target Name="PopulateFilesToCopy">
		<ItemGroup>
			<_ApplicationDataFileToCopy Include="$(PackagesDirectory)EPiServer.CMS.*\content\App_Data\GeoLiteCity.dat" />
			<_ModuleFileToCopy Include="$(PackagesDirectory)EPiServer.*\content\modules\_protected\**\*" />
		</ItemGroup>
		<ItemGroup>
			<FileToCopy Include="@(_ApplicationDataFileToCopy)">
				<DestinationFile>App_Data\%(_ApplicationDataFileToCopy.Filename)%(_ApplicationDataFileToCopy.Extension)</DestinationFile>
			</FileToCopy>
			<FileToCopy Include="@(_ModuleFileToCopy)">
				<DestinationFile>Modules\_Protected\$([System.String]::Copy(%(_ModuleFileToCopy.RecursiveDir)).Split('\', 5, StringSplitOptions.RemoveEmptyEntries)[4])%(_ModuleFileToCopy.Filename)%(_ModuleFileToCopy.Extension)</DestinationFile>
			</FileToCopy>
		</ItemGroup>
	</Target>
</Project>