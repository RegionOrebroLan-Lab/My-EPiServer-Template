@model IViewModel
<nav class="col-md-3 sub-navigation">
	@Render(Model.Layout.SubNavigation)
</nav>

@helper Render(IContentNode<SitePage> node)
{
	if(node != null)
	{
		var root = node as IContentRoot;
		if(root != null && root.Include)
		{
			@:<ul>
		}
		if(root == null || root.Include)
		{
			@:<li class="@( ((node.Active ? " active" : string.Empty) + (node.ActiveAncestor ? " active-ancestor" : string.Empty)).Trim())">
			<a href="@Url.ContentUrl(node.Value.ContentLink)">
				@node.Value.Name
				@if(!node.Leaf || node.Active)
				{
					<svg class="icon" role="presentation">
						<use xlink:href="/Style/Icons/sprite.svg#@( node.Active ? "arrow-right" : node.ActiveAncestor ? "chevron-down" : "chevron-up")"></use>
					</svg>
				}
			</a>
		}
		if(node.Children.Any())
		{
			<ul>
				@foreach(var child in node.Children)
				{
					@Render(child)
				}
			</ul>
		}
		if(root == null || root.Include)
		{
			@:</li>
		}
		if(root != null && root.Include)
		{
			@:</ul>
		}
	}
}